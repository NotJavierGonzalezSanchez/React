{"ast":null,"code":"var _jsxFileName = \"/Users/bklingen/CSC307/csc307-react-app/react-frontend/src/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [person, setPerson] = useState({\n    name: \"\",\n    job: \"\"\n  });\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    if (name === \"job\") setPerson({\n      name: person[\"name\"],\n      job: value\n    });else setPerson({\n      name: value,\n      job: person[\"job\"]\n    });\n  }\n\n  function submitForm() {\n    props.handleSubmit(person);\n    setPerson({\n      name: \"\",\n      job: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: person.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"job\",\n      children: \"Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"job\",\n      id: \"job\",\n      value: person.job,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Submit\",\n      onClick: submitForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"hAbuwSbupT2y88W1ZsmWEPJl18M=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/bklingen/CSC307/csc307-react-app/react-frontend/src/Form.js"],"names":["React","useState","Form","props","person","setPerson","name","job","handleChange","event","value","target","submitForm","handleSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;AACnCK,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,GAAG,EAAE;AAF8B,GAAD,CAApC;;AAKA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACA,QAAIL,IAAI,KAAK,KAAb,EAAoBD,SAAS,CAAC;AAAEC,MAAAA,IAAI,EAAEF,MAAM,CAAC,MAAD,CAAd;AAAwBG,MAAAA,GAAG,EAAEG;AAA7B,KAAD,CAAT,CAApB,KACKL,SAAS,CAAC;AAAEC,MAAAA,IAAI,EAAEI,KAAR;AAAeH,MAAAA,GAAG,EAAEH,MAAM,CAAC,KAAD;AAA1B,KAAD,CAAT;AACN;;AAED,WAASQ,UAAT,GAAsB;AACpBT,IAAAA,KAAK,CAACU,YAAN,CAAmBT,MAAnB;AACAC,IAAAA,SAAS,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KAAD,CAAT;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,KAAK,EAAEH,MAAM,CAACE,IAJhB;AAKE,MAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,EAAE,EAAC,KAHL;AAIE,MAAA,KAAK,EAAEJ,MAAM,CAACG,GAJhB;AAKE,MAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,YAVF,eAiBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAtCQV,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [person, setPerson] = useState({\n    name: \"\",\n    job: \"\",\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n    if (name === \"job\") setPerson({ name: person[\"name\"], job: value });\n    else setPerson({ name: value, job: person[\"job\"] });\n  }\n\n  function submitForm() {\n    props.handleSubmit(person);\n    setPerson({ name: \"\", job: \"\" });\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        value={person.name}\n        onChange={handleChange}\n      />\n      <label htmlFor=\"job\">Job</label>\n      <input\n        type=\"text\"\n        name=\"job\"\n        id=\"job\"\n        value={person.job}\n        onChange={handleChange}\n      />\n      <input type=\"button\" value=\"Submit\" onClick={submitForm} />\n    </form>\n  );\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}